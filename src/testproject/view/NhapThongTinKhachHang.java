/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testproject.view;

import com.opencsv.exceptions.CsvValidationException;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import testproject.model.DocGhiFile;
import testproject.model.HoComparator;
import testproject.model.KhachHang;
import testproject.model.MaKhachHangComparator;
import testproject.model.TuoiComparator;

/**
 *
 * @author phuon
 */
public class NhapThongTinKhachHang extends javax.swing.JFrame {

    /**
     * Creates new form NhapThongTinKhachHang
     */
    private DefaultTableModel tableModel;
    private int id = 0;
    private List<KhachHang> listKH = new ArrayList<>();
    private DocGhiFile docGhiFile = new DocGhiFile();
    private static final String curentDir = System.getProperty("user.dir");
    private static final String separator = File.separator;
    private static final String PATH_FILE_CSV = curentDir + separator + "data" + separator + "KhachHang.csv";
    private static File f = new File(PATH_FILE_CSV);

    public NhapThongTinKhachHang() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Nhập thông tin khách hàng");
        tableModel = (DefaultTableModel) tblKhachHang.getModel();
        if (f.exists()) {
            try {
                listKH = docGhiFile.docFileKhachHang();
                String ma = listKH.get(listKH.size() - 1).getMaKhachHang();
                id = Integer.parseInt(ma.substring(2)) + 1;
                hienThi(listKH);
            } catch (CsvValidationException ex) {
                Logger.getLogger(NhapThongTinKhachHang.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void hienThi(List<KhachHang> listKH) {
        tableModel.setRowCount(0);
        for (KhachHang item : listKH) {
            String maKhachHang = item.getMaKhachHang();
            String hoTen = item.getHoTen();
            String soDt = item.getSDT();
            int tuoi = item.getTuoi();
            String cmnd = item.getCMND();
            String pttt = item.getPhuongThucThanhToan();
            tableModel.addRow(new Object[]{maKhachHang, hoTen, cmnd, soDt, tuoi, pttt});
        }
    }

    public void resetForm() {
        txtCMND.setText("");
        txtHoTen.setText("");
        txtSDT.setText("");
        txtTuoi.setText("");
    }

    public static boolean isNumeric(String str) {
        try {
            Double.parseDouble(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        txtCMND = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtTuoi = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();
        btnThemThongTin = new javax.swing.JButton();
        btnChinhSua = new javax.swing.JButton();
        btnSapXep = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        boxPhuongThuThanhToan = new javax.swing.JComboBox<>();
        btnTimKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        boxSapXep = new javax.swing.JComboBox<>();

        jButton5.setText("jButton5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(190, 220, 227));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nhập thông tin khách hàng ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Họ và tên: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("CMND: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("SĐT: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Tuổi:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Thanh toán: ");

        txtHoTen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHoTenFocusLost(evt);
            }
        });
        txtHoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoTenActionPerformed(evt);
            }
        });

        txtCMND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCMNDActionPerformed(evt);
            }
        });

        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });

        txtTuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTuoiActionPerformed(evt);
            }
        });

        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KH", "Họ Tên", "CMND", "SĐT", "Tuổi ", "PTTT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhachHang);
        if (tblKhachHang.getColumnModel().getColumnCount() > 0) {
            tblKhachHang.getColumnModel().getColumn(0).setMinWidth(50);
            tblKhachHang.getColumnModel().getColumn(0).setMaxWidth(100);
            tblKhachHang.getColumnModel().getColumn(1).setMinWidth(250);
            tblKhachHang.getColumnModel().getColumn(1).setMaxWidth(350);
            tblKhachHang.getColumnModel().getColumn(2).setMinWidth(200);
            tblKhachHang.getColumnModel().getColumn(2).setMaxWidth(300);
            tblKhachHang.getColumnModel().getColumn(4).setMinWidth(50);
            tblKhachHang.getColumnModel().getColumn(4).setMaxWidth(50);
        }

        btnThemThongTin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnThemThongTin.setText("Thêm thông tin ");
        btnThemThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemThongTinActionPerformed(evt);
            }
        });

        btnChinhSua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnChinhSua.setText("Chỉnh sửa");
        btnChinhSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChinhSuaActionPerformed(evt);
            }
        });

        btnSapXep.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSapXep.setText("Sắp xếp ");
        btnSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnXoa.setText("Xóa ");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        boxPhuongThuThanhToan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        boxPhuongThuThanhToan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền mặt", "Thẻ" }));
        boxPhuongThuThanhToan.setToolTipText("");
        boxPhuongThuThanhToan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Chức năng:");

        boxSapXep.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        boxSapXep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tuoi", "Ho", "Ma KH" }));
        boxSapXep.setToolTipText("");
        boxSapXep.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1087, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThemThongTin)
                        .addGap(50, 50, 50)
                        .addComponent(btnChinhSua))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(boxPhuongThuThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(21, 21, 21)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnXoa)
                                .addGap(61, 61, 61)
                                .addComponent(btnTimKiem)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(btnSapXep))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(boxSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(boxPhuongThuThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(boxSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemThongTin)
                    .addComponent(btnChinhSua)
                    .addComponent(btnSapXep)
                    .addComponent(btnXoa)
                    .addComponent(btnTimKiem))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoTenActionPerformed

    private void txtCMNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCMNDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCMNDActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    private void txtTuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTuoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTuoiActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void btnChinhSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChinhSuaActionPerformed
        StringBuilder sb = new StringBuilder();
        if (txtHoTen.getText().equals("")) {
            sb.append("Mã khách hàng không được để trống\n");
        }
        if (txtCMND.getText().equals("")) {
            sb.append("Số chứng minh nhân dân  không được để trống\n");
        }
        if (txtSDT.getText().equals("")) {
            sb.append("Số điện thoại không được để trống\n");
        }
        if (txtTuoi.getText().equals("")) {
            sb.append("Tuổi không được để trống\n");
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(rootPane,
                    sb.toString(), "Backup problem", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int choice = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn chỉnh sửa thông tin không?", "Hỏi", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.NO_OPTION) {
            return;
        }

        String HotenKhachHang = txtHoTen.getText();
        int tuoi = Integer.parseInt(txtTuoi.getText());
        String scmnd = txtCMND.getText();
        String sdt = txtSDT.getText();
        String phuongTTT = boxPhuongThuThanhToan.getSelectedItem().toString();
        int check = 0;
        int selectedRow = tblKhachHang.getSelectedRow();
        String maKH = (String) tblKhachHang.getValueAt(selectedRow, 0);
        for (KhachHang item : listKH) {
            if (item.getMaKhachHang().equals(maKH)) {
                item.setHoTen(HotenKhachHang);
                item.setTuoi(tuoi);
                item.setCMND(scmnd);
                item.setSDT(sdt);
                item.setPhuongThucThanhToan(phuongTTT);
                check = 1;
                break;
            }

        }
        if (check == 1) {
            f.delete();
            docGhiFile.ghiFileKhachHang(listKH);
            hienThi(listKH);
            resetForm();
            JOptionPane.showMessageDialog(rootPane, "Sửa thành công");
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Thông tin Khách hàng không tồn tại", "Backup problem", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_btnChinhSuaActionPerformed
// thêm thoogn tin 
    private void btnThemThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemThongTinActionPerformed
        StringBuilder sb = new StringBuilder();
        if (txtHoTen.getText().equals("")) {
            sb.append("Mã khách hàng không được để trống\n");
        }
        if (txtCMND.getText().equals("")) {
            sb.append("Số chứng minh nhân dân  không được để trống\n");
        }
        if (txtSDT.getText().equals("")) {
            sb.append("Số điện thoại không được để trống\n");
        }
        if (txtTuoi.getText().equals("")) {
            sb.append("Tuổi không được để trống\n");
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(rootPane,
                    sb.toString(), "Backup problem", JOptionPane.WARNING_MESSAGE);
            return;
        }
        //kiểm tra sau khi xóa 
        int max = 0;
        for (KhachHang item : listKH) {
            if (Integer.parseInt(item.getMaKhachHang().substring(2)) > max) {
                max = Integer.parseInt(item.getMaKhachHang().substring(2));
                id = max + 1;
            }
        }
        String maKhachHang = "KH" + id++;
        System.out.println(maKhachHang);
        String HotenKhachHang = txtHoTen.getText();
        int tuoi = Integer.parseInt(txtTuoi.getText());
        String scmnd = txtCMND.getText();
        String sdt = txtSDT.getText();
        String phuongTTT = boxPhuongThuThanhToan.getSelectedItem().toString();
        KhachHang kh = new KhachHang(maKhachHang, HotenKhachHang, scmnd, sdt, tuoi, phuongTTT);
        listKH.add(kh);
        tableModel.addRow(new Object[]{maKhachHang, HotenKhachHang, scmnd, sdt, tuoi, phuongTTT});
        f.delete();
        docGhiFile.ghiFileKhachHang(listKH);
        resetForm();
    }//GEN-LAST:event_btnThemThongTinActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int choice = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn Lưu thông tin vào file không?", "Hỏi", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            f.delete();
            docGhiFile.ghiFileKhachHang(listKH);
        }
    }//GEN-LAST:event_formWindowClosing

    private void txtHoTenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHoTenFocusLost

    }//GEN-LAST:event_txtHoTenFocusLost
//kích ở bảng để hiện ra thông tin 
    private void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseClicked
        int selectedRow = tblKhachHang.getSelectedRow();
        if (selectedRow >= 0) {
            String maKhachHang = (String) tblKhachHang.getValueAt(selectedRow, 0);
            for (KhachHang item : listKH) {
                if (item.getMaKhachHang().equals(maKhachHang)) {
                    txtHoTen.setText(item.getHoTen());
                    txtSDT.setText(item.getSDT());
                    txtCMND.setText(item.getCMND());
                    txtTuoi.setText(Integer.toString(item.getTuoi()));
                    boxPhuongThuThanhToan.setSelectedItem(item.getPhuongThucThanhToan());
                    break;
                }
            }
        }
    }//GEN-LAST:event_tblKhachHangMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        boolean flag = false;
        tableModel.setRowCount(0);
        if (isNumeric(txtTimKiem.getText()) == false) {
            for (KhachHang item : listKH) {
                if (item.getMaKhachHang().equals(txtTimKiem.getText())) {
                    tableModel.addRow(new Object[]{item.getMaKhachHang(), item.getHoTen(), item.getCMND(), item.getSDT(), item.getTuoi(), item.getPhuongThucThanhToan()});
                }
                if (item.getHoTen().equals(txtTimKiem.getText())) {
                    System.out.println("a");
                    tableModel.addRow(new Object[]{item.getMaKhachHang(), item.getHoTen(), item.getCMND(), item.getSDT(), item.getTuoi(), item.getPhuongThucThanhToan()});
                }
                if (item.getSDT().equals(txtTimKiem.getText())) {
                    tableModel.addRow(new Object[]{item.getMaKhachHang(), item.getHoTen(), item.getCMND(), item.getSDT(), item.getTuoi(), item.getPhuongThucThanhToan()});
                }
                flag = true;
            }
            if (flag == false) {
                JOptionPane.showMessageDialog(rootPane,
                        "Thông tin Khách hàng không tồn tại", "Backup problem", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            for (KhachHang item : listKH) {
                if (item.getCMND().equals(txtTimKiem.getText())) {
                    tableModel.addRow(new Object[]{item.getMaKhachHang(), item.getHoTen(), item.getCMND(), item.getSDT(), item.getTuoi(), item.getPhuongThucThanhToan()});
                }
                if (item.getSDT().equals(txtTimKiem.getText())) {
                    tableModel.addRow(new Object[]{item.getMaKhachHang(), item.getHoTen(), item.getCMND(), item.getSDT(), item.getTuoi(), item.getPhuongThucThanhToan()});
                }
                if (txtTimKiem.getText().length() <= 2 && txtTimKiem.getText().length() != 0) {
                    if (item.getTuoi() == Integer.parseInt(txtTimKiem.getText())) {
                        tableModel.addRow(new Object[]{item.getMaKhachHang(), item.getHoTen(), item.getCMND(), item.getSDT(), item.getTuoi(), item.getPhuongThucThanhToan()});
                    }
                }
                flag = true;
            }
            if (flag == false) {
                JOptionPane.showMessageDialog(rootPane,
                        "Thông tin Khách hàng không tồn tại", "Backup problem", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepActionPerformed
        if (boxSapXep.getSelectedItem().toString().equals("Tuoi")) {
            Collections.sort(listKH, new TuoiComparator());
            hienThi(listKH);
        }
        if (boxSapXep.getSelectedItem().toString().equals("Ho")) {
            Collections.sort(listKH, new HoComparator());
            hienThi(listKH);
        }
        if (boxSapXep.getSelectedItem().toString().equals("Ma KH")) {
            Collections.sort(listKH, new MaKhachHangComparator());
            hienThi(listKH);
        }
    }//GEN-LAST:event_btnSapXepActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int selectedRow = tblKhachHang.getSelectedRow();
        String maPhong = (String) tblKhachHang.getValueAt(selectedRow, 0);
        int choice = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn xóa  thông tin phòng  không?", "Hỏi", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.NO_OPTION) {
            return;
        }
        int check = 0;
        for (int i = 0; i < listKH.size(); i++) {
            if (listKH.get(i).getMaKhachHang().equals(maPhong)) {
                listKH.remove(listKH.get(i));
                check = 1;
                break;
            }
        }
        if (check == 1) {
            f.delete();
            docGhiFile.ghiFileKhachHang(listKH);
            hienThi(listKH);
            resetForm();
            JOptionPane.showMessageDialog(rootPane, "Xóa thành công");
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Thông tin khách hàng không tồn tại", "Backup problem", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhapThongTinKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhapThongTinKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhapThongTinKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhapThongTinKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NhapThongTinKhachHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxPhuongThuThanhToan;
    private javax.swing.JComboBox<String> boxSapXep;
    private javax.swing.JButton btnChinhSua;
    private javax.swing.JButton btnSapXep;
    private javax.swing.JButton btnThemThongTin;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKhachHang;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables
}
